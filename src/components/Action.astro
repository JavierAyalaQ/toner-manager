---
import type { HTMLTag, Polymorphic } from "astro/types";

import type { ActionProps } from "@/types.d.ts";

const predefinedClasses: { [key: string]: string } = {
	link: "no-underline inline-flex text-sm text-teal-200 hover:text-teal-300 transition-colors font-medium hover:underline",
	fill: "no-underline inline-flex w-fit px-3 py-1.5 text-sm text-center font-medium transition-all transform hover:scale-[1.05] bg-teal-600 border-2 border-teal-600 rounded-lg shadow-sm text-teal-50 hover:bg-teal-500 focus:ring-teal-300/10 hover:border-teal-500 focus:ring-4 focus:outline-none shadow-lg shadow-teal-500/20",
	border: "no-underline inline-flex w-fit px-3 py-1.5 text-sm text-center font-medium transition-all transform hover:scale-[1.05] bg-transparent border-2 border-teal-600 rounded-lg shadow-sm focus:ring-4 focus:outline-none text-teal-50 hover:border-teal-500 hover:bg-teal-700/10 focus:ring-teal-300/10 shadow-lg shadow-teal-500/20",
	white: "no-underline inline-flex w-fit px-3 py-1.5 text-sm text-center font-medium border-2 rounded-lg shadow-sm text-white border-white bg-transparent hover:bg-white hover:text-black transition-all transform hover:scale-[1.05] focus:ring-white/10 focus:ring-4 focus:outline-none shadow-lg shadow-teal-50/20",
	black: "no-underline inline-flex w-fit px-3 py-1.5 text-sm text-center font-medium border-2 rounded-lg shadow-sm text-black border-black bg-transparent hover:bg-black hover:text-white transition-all transform hover:scale-[1.05] focus:ring-black/10 focus:ring-4 focus:outline-none shadow-lg shadow-teal-950/20",
};

const {
	as: Tag ="a",
	variant ="fill",
	class: className,
  body,
	...props
} = Astro.props as ActionProps<HTMLTag>;

const classes = [
	predefinedClasses[variant as keyof typeof predefinedClasses],
	className
];

---

<Tag class:list={classes} {...props} tabindex="0">
  <slot>
    {body && body}
  </slot>
</Tag>